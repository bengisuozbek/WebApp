// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppAPI.Data;

#nullable disable

namespace WebAppAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("WebAppAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cosmetics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clothes"
                        });
                });

            modelBuilder.Entity("WebAppAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "TV",
                            Price = 1000m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Iphone",
                            Price = 620m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Blush",
                            Price = 80m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Name = "Sweat",
                            Price = 65m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Lipstick",
                            Price = 120m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Tshirt",
                            Price = 10m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Name = "Skirt",
                            Price = 50m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Eyeliner",
                            Price = 1000m
                        });
                });

            modelBuilder.Entity("WebAppAPI.Models.Product", b =>
                {
                    b.HasOne("WebAppAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAppAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
